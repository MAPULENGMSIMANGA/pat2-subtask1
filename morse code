//this is a morse code translator
#include <iostream>
#include <map>
#include <string>
#include <cctype>

std::map<char, std::string> createMorseMap() {
    return {
        {'A', ".-"},   {'B', "-..."}, {'C', "-.-."}, {'D', "-.."},  {'E', "."},
        {'F', "..-."}, {'G', "--."},  {'H', "...."}, {'I', ".."},   {'J', ".---"},
        {'K', "-.-"},  {'L', ".-.."}, {'M', "--"},   {'N', "-."},   {'O', "---"},
        {'P', ".--."}, {'Q', "--.-"}, {'R', ".-."},  {'S', "..."},  {'T', "-"},
        {'U', "..-"},  {'V', "...-"}, {'W', ".--"},  {'X', "-..-"}, {'Y', "-.--"},
        {'Z', "--.."}
    };
}
std::string toMorseCode(const std::string& text) {
    auto morseMap = createMorseMap();
    std::string morseCode;

    for (char ch : text) {
        if (std::isalpha(ch)) {
            char upperChar = std::toupper(ch);
            std::string morse = morseMap[upperChar];
            std::cout << upperChar << ": " << morse << ":" << std::endl;
            morseCode += morse + " ";
        } else if (ch == ' ') {
            morseCode += "   ";  // Separate words
        }
        // All other characters are ignored
    }

    return morseCode;
}

int main() {
    std::string input;
    std::cout << "Enter a sentence to convert to Morse code: ";
    std::getline(std::cin, input);
    std::cout << "\nConversions:\n";
    std::string morse = toMorseCode(input);
std::cout << "\nFull Morse Code:\n" << morse << std::endl;

    return 0;
}

